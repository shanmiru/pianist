print([[



 __ __|   \     |      ____|   \  | __ __|  |      ____|   ___|   ___|  
    |    _ \    |      __|      \ |    |    |      __|   \___ \ \___ \  
    |   ___ \   |      |      |\  |    |    |      |           |      | 
   _| _/    _\ _____| _____| _| \_|   _|   _____| _____| _____/ _____/  
                                                                        


]])

loadstring(
    game:HttpGet("https://raw.githubusercontent.com/hellohellohell012321/discordpopup/main/discordpopup.lua", true)
)()

local NotificationLibrary =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/hellohellohell012321/TALENTLESS/main/notif_lib.lua"))()

local function playSound(soundId, loudness)
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Parent = game.Players.LocalPlayer.Character or game.Players.LocalPlayer
    sound.Volume = loudness or 1
    sound:Play()
end

-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local closeButton = Instance.new("TextButton")
local infoButton = Instance.new("TextButton")
local title = Instance.new("TextLabel")
local uic2 = Instance.new("UICorner")
local uic1 = Instance.new("UICorner")
local categoriesFrame = Instance.new("ScrollingFrame")
local categoriesLayout = Instance.new("UIListLayout")
local categoriesPadding = Instance.new("UIPadding")
local scroll = Instance.new("ScrollingFrame")
local listLayout = Instance.new("UIListLayout")
local barlist = Instance.new("UIListLayout")
local barpadding = Instance.new("UIPadding")
local padding = Instance.new("UIPadding")
local searchbar = Instance.new("TextBox")
local creds = Instance.new("TextLabel")
local bar = Instance.new("Frame")
local songname = Instance.new("TextLabel")
local bpmbox = Instance.new("TextBox")
local playsong = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

frame.Name = "frame"
frame.Parent = ScreenGui
frame.BackgroundColor3 = Color3.fromRGB(33, 33, 41)
frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
frame.BorderSizePixel = 0
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Size = UDim2.new(0, 475, 0, 272)

closeButton.Name = "closeButton"
closeButton.Parent = frame
closeButton.BackgroundTransparency = 1.000
closeButton.LayoutOrder = 1
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.ZIndex = 5
closeButton.Font = Enum.Font.SourceSansBold
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.TextWrapped = true

infoButton.Name = "infoButton"
infoButton.Parent = frame
infoButton.BackgroundTransparency = 1.000
infoButton.LayoutOrder = 2
infoButton.Position = UDim2.new(0, 5, 0, 5)
infoButton.Size = UDim2.new(0, 30, 0, 30)
infoButton.ZIndex = 5
infoButton.Font = Enum.Font.SourceSansBold
infoButton.Text = "?"
infoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
infoButton.TextScaled = true
infoButton.TextWrapped = true

title.Name = "title"
title.Parent = frame
title.BackgroundColor3 = Color3.fromRGB(50, 57, 73)
title.BorderColor3 = Color3.fromRGB(0, 0, 0)
title.BorderSizePixel = 0
title.Size = UDim2.new(1, 0, 0, 50)
title.Font = Enum.Font.SourceSansBold
title.Text = "TALENTLESS"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 46.000

uic2.CornerRadius = UDim.new(0, 4)
uic2.Name = "uic2"
uic2.Parent = title

uic1.CornerRadius = UDim.new(0, 4)
uic1.Name = "uic1"
uic1.Parent = frame

categoriesFrame.Name = "categoriesFrame"
categoriesFrame.Parent = frame
categoriesFrame.Active = true
categoriesFrame.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
categoriesFrame.BackgroundTransparency = 1.000
categoriesFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
categoriesFrame.BorderSizePixel = 0
categoriesFrame.Position = UDim2.new(0.0105263162, 0, 0.183819935, 0)
categoriesFrame.Size = UDim2.new(0, 111, 0, 222)
categoriesFrame.ZIndex = 0
categoriesFrame.ScrollBarThickness = 3
categoriesFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

categoriesLayout.Name = "categoriesLayout"
categoriesLayout.Parent = categoriesFrame
categoriesLayout.SortOrder = Enum.SortOrder.LayoutOrder
categoriesLayout.Padding = UDim.new(0, 10)
categoriesLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

categoriesPadding.Name = "categoriesPadding"
categoriesPadding.Parent = categoriesFrame
categoriesPadding.PaddingLeft = UDim.new(0, 5)
categoriesPadding.PaddingRight = UDim.new(0, 5)
categoriesPadding.PaddingTop = UDim.new(0, 5)
categoriesPadding.PaddingBottom = UDim.new(0, 5)

scroll.Name = "scroll"
scroll.Parent = frame
scroll.Active = true
scroll.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
scroll.BackgroundTransparency = 1.000
scroll.BorderColor3 = Color3.fromRGB(0, 0, 0)
scroll.BorderSizePixel = 0
scroll.Position = UDim2.new(0.266860753, 0, 0.183819935, 0)
scroll.Size = UDim2.new(0, 198, 0, 222)
scroll.CanvasPosition = Vector2.new(0, 17.4999962)
scroll.HorizontalScrollBarInset = Enum.ScrollBarInset.Always
scroll.ScrollBarThickness = 3
scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y

listLayout.Name = "listLayout"
listLayout.Parent = scroll
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 20)

padding.Name = "padding"
padding.Parent = scroll
padding.PaddingTop = UDim.new(0, 20)
padding.PaddingBottom = UDim.new(0, 20)

searchbar.Name = "searchbar"
searchbar.Parent = scroll
searchbar.BackgroundColor3 = Color3.fromRGB(96, 102, 121)
searchbar.BorderColor3 = Color3.fromRGB(0, 0, 0)
searchbar.BorderSizePixel = 0
searchbar.Position = UDim2.new(0.163100004, 0, 0.0500000007, 0)
searchbar.Size = UDim2.new(0, 150, 0, 20)
searchbar.Font = Enum.Font.SourceSansBold
searchbar.PlaceholderText = "Search..."
searchbar.Text = ""
searchbar.TextColor3 = Color3.fromRGB(255, 255, 255)
searchbar.TextScaled = true
searchbar.TextSize = 14.000
searchbar.TextWrapped = true

creds.Name = "creds"
creds.Parent = frame
creds.AnchorPoint = Vector2.new(0.5, 0.5)
creds.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
creds.BackgroundTransparency = 1.000
creds.BorderColor3 = Color3.fromRGB(0, 0, 0)
creds.BorderSizePixel = 0
creds.Position = UDim2.new(0.5, 0, 0.189999998, 0)
creds.Size = UDim2.new(0, 314, 0, 26)
creds.Font = Enum.Font.LuckiestGuy
creds.Text = "piano autoplayer by hellohellohell012321"
creds.TextColor3 = Color3.fromRGB(255, 254, 255)
creds.TextScaled = true
creds.TextSize = 14.000
creds.TextTransparency = 0.320
creds.TextWrapped = true

bar.Name = "bar"
bar.Parent = frame
bar.Active = true
bar.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
bar.BackgroundTransparency = 1.000
bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
bar.BorderSizePixel = 0
bar.Position = UDim2.new(1.05001855, -173, 0.20220229, 0)
bar.Size = UDim2.new(0, 143, 0, 150)
bar.ZIndex = 0

songname.Name = "songname"
songname.Parent = bar
songname.BackgroundColor3 = Color3.fromRGB(76, 82, 101)
songname.BorderColor3 = Color3.fromRGB(64, 68, 90)
songname.BorderSizePixel = 4
songname.Position = UDim2.new(0.0689100027, 0, 0.0855299979, 0)
songname.Size = UDim2.new(0, 125, 0, 34)
songname.ZIndex = -5
songname.Font = Enum.Font.SourceSansBold
songname.Text = "SONG NAME"
songname.TextColor3 = Color3.fromRGB(255, 255, 255)
songname.TextScaled = true
songname.TextSize = 23.000
songname.TextWrapped = true
songname.LayoutOrder = 1

bpmbox.Name = "bpmbox"
bpmbox.Parent = bar
bpmbox.BackgroundColor3 = Color3.fromRGB(96, 102, 121)
bpmbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
bpmbox.BorderSizePixel = 0
bpmbox.Position = UDim2.new(0.163100004, 0, 0.612699986, 0)
bpmbox.Size = UDim2.new(0, 90, 0, 20)
bpmbox.Font = Enum.Font.SourceSansBold
bpmbox.PlaceholderText = "bpm"
bpmbox.Text = ""
bpmbox.TextColor3 = Color3.fromRGB(255, 255, 255)
bpmbox.TextScaled = true
bpmbox.TextSize = 14.000
bpmbox.TextWrapped = true
bpmbox.LayoutOrder = 2

playsong.Name = "playsong"
playsong.Parent = bar
playsong.BackgroundColor3 = Color3.fromRGB(76, 82, 101)
playsong.BorderColor3 = Color3.fromRGB(64, 68, 90)
playsong.BorderSizePixel = 4
playsong.Position = UDim2.new(0.0689100027, 0, 0.38815999, 0)
playsong.Size = UDim2.new(0, 125, 0, 27)
playsong.Font = Enum.Font.SourceSansBold
playsong.Text = "play song !"
playsong.TextColor3 = Color3.fromRGB(255, 255, 255)
playsong.TextSize = 25.000
playsong.LayoutOrder = 3

barlist.Name = "barlist"
barlist.Parent = bar
barlist.SortOrder = Enum.SortOrder.LayoutOrder
barlist.Padding = UDim.new(0, 10)
barlist.HorizontalAlignment = Enum.HorizontalAlignment.Center

barpadding.Name = "categoriesPadding"
barpadding.Parent = bar
barpadding.PaddingLeft = UDim.new(0, 5)
barpadding.PaddingRight = UDim.new(0, 5)
barpadding.PaddingTop = UDim.new(0, 10)
barpadding.PaddingBottom = UDim.new(0, 5)

local function filterSongs(query)
    query = query:lower()
    scroll.CanvasPosition = Vector2.new(0, 0)
    for _, child in pairs(scroll:GetChildren()) do
        if child:IsA("TextButton")  then
            -- Regular song buttons
            local songName = child.Text:lower()
            local alternateNamesStr = child:GetAttribute("AlternateNames") or ""
            local alternateNames = alternateNamesStr:split(",")
            local matchFound = false

            if songName:find(query) then
                matchFound = true
            else
                for _, altName in pairs(alternateNames) do
                    if matchFound == false then
                        if altName:lower():find(query) then
                            matchFound = true
                        end
                    end
                end
            end
            child.Visible = matchFound or query == ""
        elseif child:IsA("Frame") and child:FindFirstChildOfClass("TextButton") then
            -- Custom song frames
            local button = child:FindFirstChildOfClass("TextButton")
            local songName = button.Text:lower()
            local matchFound = songName:find(query)
            child.Visible = matchFound or query == ""
        end
    end
end

searchbar:GetPropertyChangedSignal("Text"):Connect(
    function()
        filterSongs(searchbar.Text)
    end
)

filterSongs("")

-- drag script (not mince)

local UserInputService = game:GetService("UserInputService")

local gui = frame

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    gui.Position =
        UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

gui.InputBegan:Connect(
    function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

            input.Changed:Connect(
                function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end
            )
        end
    end
)

gui.InputChanged:Connect(
    function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end
)

UserInputService.InputChanged:Connect(
    function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end
)

local function newSongButton(name, textsize, alternateNames)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Parent = scroll
    button.BackgroundColor3 = Color3.fromRGB(76, 82, 101)
    button.BorderColor3 = Color3.fromRGB(64, 68, 90)
    button.BorderSizePixel = 4
    button.Size = UDim2.new(0, 175, 0, 35)
    button.Font = Enum.Font.SourceSansBold
    button.Text = name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = textsize

    button:SetAttribute("AlternateNames", table.concat(alternateNames or {}, ","))

    return button
end

-- newSongButton("", 27, {})

LOOPRANDOM = newSongButton("SHUFFLE PLAY SONGS", 22, {})
PLAYRANDOM = newSongButton("PLAY A RANDOM SONG", 22, {})

local seperator = Instance.new("Frame")
seperator.Name = "seperator"
seperator.Parent = scroll
seperator.BackgroundColor3 = Color3.fromRGB(64, 68, 90)
seperator.Size = UDim2.new(0, 200, 0, 8)

if game.Players.LocalPlayer.Name == "4BCQA" or game.Players.LocalPlayer.Name == "fredoggins" then
    AVRIL_14 = newSongButton("AVRIL 14", 27, {})
else
end

A_SKY_FULL = newSongButton("A SKY FULL OF STARS", 23, {"coldplay"})
A_THOUSAND = newSongButton("A THOUSAND MILES", 24, {"popular"})
AFTER_DARK = newSongButton("AFTER DARK", 27, {"mr kitty"})
ALL_GIRLS = newSongButton("ALL GIRLS ARE THE SAME", 19, {"juice wrld"})
ALL_MY_FELLAS = newSongButton("ALL MY FELLAS", 27, {"popular"})
ENIGMATIC = newSongButton("AN ENIGMATIC ENCOUNTER", 17, {})
ANOTHER_LOVE = newSongButton("ANOTHER LOVE", 27, {"sad, love"})
ANYONE_CAN = newSongButton("ANYONE CAN BE FIND LOVE (except you.)", 10, {"breakcore"})
ARIA_MATH = newSongButton("ARIA MATH", 27, {"c418"})
ARUARIAN = newSongButton("ARUARIAN DANCE", 27, {"nujabes"})
AS_IT_WAS = newSongButton("AS IT WAS", 27, {"harry styles"})
ASGORE = newSongButton("ASGORE", 27, {})
ASTRONAMIA = newSongButton("ASTRONAMIA (COFFIN DANCE)", 15, {""})
SPEED_OF = newSongButton("AT THE SPEED OF LIGHT", 20, {"geometry dash"})
AVENGERS = newSongButton("AVENGERS (EPIC COVER)", 20, {"popular", "movie", "hard"})
BAD_APPLE = newSongButton("BAD APPLE!!", 27, {"popular"})
BAD_PIGGIES = newSongButton("BAD PIGGIES", 27, {"popular"})
BATTLE_AGAINST = newSongButton("BATTLE AGAINST A TRUE HERO", 15, {})
BEETHOVEN_VIRUS = newSongButton("BEETHOVEN VIRUS", 24, {"beethoven", "popular", "hard"})
BIRDS_OF_A = newSongButton("BIRDS OF A FEATHER", 23, {"billie eilish"})
BLOODY = newSongButton("BLOODY MARY", 27, {"lady gaga", "wednesday"})
BLUE = newSongButton("BLUE (DA BA DEE)", 27, {"im blue", "im good"})
BREADY = newSongButton("BREADY, SET, GO!", 25, {"omori"})
BY_YOUR_SIDE = newSongButton("BY YOUR SIDE", 27, {"omori"})
CAN_YOU_HEAR = newSongButton("CAN YOU HEAR THE MUSIC", 18, {"cinematic", "oppenheimer", "movie", "popular"})
CAN_YOU_HEAR_EPIC = newSongButton("CAN YOU HEAR THE MUSIC (INSANE COVER)", 10, {"cinematic", "hans zimmer", "oppenheimer", "movie", "popular"})
CANDYLAND = newSongButton("CANDYLAND", 27, {"tobu", "ncs", "no copyright sounds"})
CANON_D = newSongButton("CANON IN D", 27, {""})
CARELESS = newSongButton("CARELESS WHISPER", 24, {"love", "popular"})
CANT_LET = newSongButton("CANT LET GO", 27, {"geometry dash"})
CENTIMETER = newSongButton("CENTIMETER", 27, {"rent a girlfriend"})
CHRISTMAS_KIDS = newSongButton("CHRISTMAS KIDS", 27, {"roar"})
CLOUD_9 = newSongButton("CLOUD 9", 27, {"tobu", "ncs", "no copyright sounds"})
COCONUT = newSongButton("COCONUT MALL !!", 27, {"popular"})
COUNTING_STARS = newSongButton("COUNTING STARS", 27, {"one republic"})
CRADLES = newSongButton("CRADLES", 27, {"ncs", "no copyright sounds", "sub urban"})
CUPID = newSongButton("CUPID", 27, {"love"})
DAMNED = newSongButton("DAMNED (COD ZOMBIES)", 19, {"cod zombies theme", "call of duty", "creepy"})
DARK_BEACH = newSongButton("DARK BEACH", 27, {"pastel ghost"})
DAYLIGHT = newSongButton("DAYLIGHT", 27, {"david kushner"})
DEADLOCKED = newSongButton("DEADLOCKED", 27, {"geometry dash"})
DESPACITO = newSongButton("DESPACITO", 27, {""})
DETROIT = newSongButton("DETROIT: BECOME HUMAN - OPENING", 11, {""})
DIE_WITH = newSongButton("DIE WITH A SMILE", 27, {"popular", "bruno mars"})
DOG_SONG = newSongButton("DOG SONG", 27, {})
DONT_STOP = newSongButton("DONT STOP BELIEVIN'", 21, {"journey"})
DRAMAM = newSongButton("DRAMAMIME", 27, {"flawed mangoes"})
DREAM_FL = newSongButton("DREAM FLOWER", 27, {"klydix"})
DREAM_ON = newSongButton("DREAM ON", 27, {"aerosmith"})
DROWNING_LOVE = newSongButton("DROWNING LOVE", 27, {"chasing kou"})
DRY_HANDS = newSongButton("DRY HANDS", 27, {"c418"})
DUMB_DUMB = newSongButton("DUMB DUMB", 27, {"everyone is dumb"})
DUVET = newSongButton("DUVET", 27, {"boa"})
EASY_ON_ME = newSongButton("EASY ON ME", 27, {"adele"})
ENEMY = newSongButton("ENEMY", 27, {"imagine dragons", "arcane"})
EVERGREEN = newSongButton("EVERGREEN", 27, {""})
EXPERIENCE = newSongButton("EXPERIENCE", 27, {"cinematic", "love"})
FADED = newSongButton("FADED", 27, {"ncs", "alan walker", "no copyright sounds"})
FANTAISIE = newSongButton("FANTAISIE IMPROMPTU", 20, {"chopin", "hard"})
FALLEN_DOWN = newSongButton("FALLEN DOWN", 27, {"popular"})
FINAL_DUET = newSongButton("FINAL DUET", 27, {"omori"})
FINALE = newSongButton("FINALE", 27, {})
FIVE_NIGHTS_1 = newSongButton("FIVE NIGHTS AT FREDDYS 1", 18, {"fnaf", "five nights at freddys", "the living tombstone"})
FLARE = newSongButton("FLARE", 27, {"hensonn", "sahara", "phonk"})
FLASHING = newSongButton("FLASHING LIGHTS", 27, {"kanye west", "graduation"})
FREEDOM_DIVE = newSongButton("FREEDOM DIVE", 27, {"xi"})
FR = newSongButton("FROM THE START", 25, {"laufey", "love", "popular"})
FREAKS = newSongButton("FREAKS", 27, {"surf curse"})
FUKASHIGI = newSongButton("FUKASHIGI NO CARTE (BUNNY GIRL)", 13, {"popular"})
FUR_ELISE = newSongButton("FUR ELISE", 27, {"beethoven", "classical"})
GEOMETRY_DASH = newSongButton("GEOMETRY DASH THEME (DASH)", 14, {"geometry dash"})
GIORNO = newSongButton("GIORNO'S THEME", 27, {"popular"})
GIVE_UP = newSongButton("NEVER GONNA GIVE YOU UP", 17, {"popular"})
GOLDENHOUR = newSongButton("GOLDEN HOUR", 27, {"jvke", "love, sad", "popular"})
GOOD_MORNING = newSongButton("GOOD MORNING (OMORI)", 18, {"omori"})
HAGGSTORM = newSongButton("HAGGSTORM", 27, {"c418"})
HEARTACHE = newSongButton("HEARTACHE", 27, {})
HEAT_WAVE = newSongButton("HEAT WAVE", 27, {"glass animals"})
HEATHENS = newSongButton("HEATHENS", 27, {"twenty one pilots", "suicide squad"})
HELLO = newSongButton("HELLO X I LOVE YOU", 25.5, {"omfg"})
HERE_WITH = newSongButton("HERE WITH ME", 27, {"d4vd", "romantic homicide"})
HIGH_HOPES = newSongButton("HIGH HOPES", 27, {"panic at the disco", "panic!", "house of memories"})
HIS_THEME = newSongButton("HIS THEME", 27, {})
HIT_THE_ROAD = newSongButton("HIT THE ROAD, JACK", 24, {"shake"})
HOPES_DREAMS = newSongButton("HOPES AND DREAMS", 23, {"asriel"})
HOUSE_OF = newSongButton("HOUSE OF MEMORIES", 23, {"panic at the disco", "panic!", "high hopes"})
HOWLS_MOVING_CASTLE = newSongButton("HOWLS MOVING CASTLE", 20, {"movie", "cinematic", "popular"})
HUNGARIAN = newSongButton("HUNGARIAN DANCE", 23, {})
IDGAF = newSongButton("IDGAF", 27, {"boywithuke", "blackbear"})
IDOL = newSongButton("IDOL", 27, {"oshi no ko", "yoasobi"})
IF_I_AM_WITH_YOU = newSongButton("IF I AM WITH YOU", 27, {"jjk", "jujitsu", "hollow purple"})
IM_STILL = newSongButton("IM STILL STANDING", 26, {"sing", "elton john"})
IMMORTAL = newSongButton("IMMORTAL", 27, {"playboi carti"})
IN_THE_NAME = newSongButton("IN THE NAME OF LOVE", 22, {""})
INSANE = newSongButton("INSANE", 27, {"hazbin hotel"})
INTERSTELLAR = newSongButton("INTERSTELLAR", 27, {"hans zimmer", "cinematic", "movie", "popular"})
ISABELLA = newSongButton("ISABELLA'S LULLABY", 24, {})
IT_MEANS = newSongButton("IT MEANS EVERYTHING", 20, {"omori"})
ITS_BEEN_SO = newSongButton("ITS BEEN SO LONG", 27, {"the living tombstone", "five nights at freddys", "fnaf"})
I_WANT = newSongButton("I WANT IT THAT WAY", 24, {"love", "popular"})
SURVIVE = newSongButton("I WILL SURVIVE", 27, {""})
KEROSENE = newSongButton("KEROSENE", 27, {"popular"})
KEY = newSongButton("KEY", 27, {"c418"})
L = newSongButton("L", 27, {"death note"})
LA_CAMPANELLA = newSongButton("LA CAMPANELLA", 27, {"etude", "hard", "liszt"})
LACRIMOSA = newSongButton("LACRIMOSA - REQUIEM", 22, {"mozart", "noot noot"})
LALALA = newSongButton("LALALA", 27, {"bbno"})
LEVELS = newSongButton("LEVELS", 27, {"avicii"})
LIGHTS = newSongButton("LIGHTS THEME", 27, {"death note"})
LIVING_MICE = newSongButton("LIVING MICE", 27, {"c418"})
LOST_LIBRARY = newSongButton("LOST LIBRARY", 27, {"omori"})
LOST_UMB = newSongButton("LOST UMBRELLA", 27, {"cute depressed", "vocaloid"})
LOVELY_B = newSongButton("LOVELY BASTARDS", 27, {"phonk"})
MA_MEILLEUR = newSongButton("MA MEILLEUR ENEMIE", 22, {"stromae", "arcane"})
MARI_BOSS = newSongButton("MARI BOSS FIGHT", 25, {"omori"})
MARRIED = newSongButton("MARRIED LIFE", 27, {"movie", "up"})
MARY_ON = newSongButton("MARY ON A CROSS", 27, {""})
MEGALOVANIA = newSongButton("MEGALOVANIA", 27, {"popular"})
METAMORPH = newSongButton("METAMORPHOSIS", 27, {"phonk"})
MICE_ON = newSongButton("MICE ON VENUS", 27, {"c418"})
MII = newSongButton("MII CHANNEL THEME", 24, {"wii"})
MIKU = newSongButton("MIKU", 27, {"vocaloid"})
MINECRAFT = newSongButton("MINECRAFT", 27, {"c418"})
MONODY = newSongButton("MONODY", 27, {"ncs", "no copyright sounds", "thefatrat"})
MOOD = newSongButton("MOOD", 27, {"24kgoldn"})
MOOG_CITY = newSongButton("MOOG CITY", 27, {"c418"})
MOONLIGHT = newSongButton("MOONLIGHT SONATA - FIRST MOVEMENT", 10, {"beethoven"})
M3 = newSongButton("MOONLIGHT SONATA - THIRD MOVEMENT", 10, {"beethoven", "hard"})
NEVER_MEANT = newSongButton("NEVER MEANT TO BELONG", 18, {"bleach"})
NOCTURNE = newSongButton("NOCTURNE", 27, {"chopin"})
NOT_A_SLACKER = newSongButton("NOT A SLACKER ANYMORE", 18, {})
NYEH = newSongButton("NYEH HEH HEH!", 27, {"papyrus"})
ONCE_UPON = newSongButton("ONCE UPON A TIME", 26, {""})
PAST_LIVES = newSongButton("PAST LIVES", 27, {""})
POKEMON = newSongButton("POKEMON MAIN THEME", 18, {""})
POKEMON_RED = newSongButton("POKEMON RED AND BLUE", 18, {""})
RACING_INTO = newSongButton("RACING INTO THE NIGHT", 20, {"yoasobi"})
RATDANCE = newSongButton("RAT DANCE", 27, {"chess", ""})
RESONANCE = newSongButton("RESONANCE", 27, {"home"})
RISE_UP = newSongButton("RISE UP", 27, {"thefatrat", "ncs", "no copyright sounds"})
RIVER_FLOWS = newSongButton("RIVER FLOWS IN YOU", 23, {""})
ROMANTIC_HOMICIDE = newSongButton("ROMANTIC HOMICIDE", 22, {"dv4d", "here with me"})
RUNAWAY = newSongButton("RUNAWAY", 27, {"kanye", "popular", "rap", "hip"})
RUNNING_UP = newSongButton("RUNNING UP THAT HILL", 19, {"stranger things"})
RUSHE = newSongButton("RUSH E", 27, {"popular"})
SAVE_YOUR = newSongButton("SAVE YOUR TEARS", 27, {"weeknd"})
SHAPE_OF = newSongButton("SHAPE OF YOU", 27, {"ed sheeran"})
SHIAWASE = newSongButton("SHIAWASE (VIP)", 27, {"tidal wave", "geometry dash"})
SHIKAIRO = newSongButton("SHIKAIRO DAYS", 27, {"my dear friend nokotan"})
SHOP = newSongButton("SHOP", 27, {})
SICK_OF_U = newSongButton("SICK OF U", 27, {"boywithuke"})
SKYFALL = newSongButton("SKYFALL", 27, {"adele"})
SLAY = newSongButton("SLAY", 27, {"eternxlz", "phonk"})
SNOWFALL = newSongButton("SNOWFALL", 27, {"oneheart"})
SNOWY = newSongButton("SNOWY", 27, {})
SOLAS = newSongButton("SOLAS", 27, {"sad"})
SOMETHING_JUST = newSongButton("SOMETHING JUST LIKE THIS", 17, {"the chainsmokers"})
SPACE_SONG = newSongButton("SPACE SONG", 27, {"beach house"})
SPARKLE = newSongButton("SPARKLE", 27, {"radwimps", "your name", "kimi no na wa"})
SPEAR_OF = newSongButton("SPEAR OF JUSTICE", 26, {})
SPIDER_DANCE = newSongButton("SPIDER DANCE", 27, {"muffet"})
STAY = newSongButton("STAY", 27, {"justin bieber", "kid laroi"})
STEREO_MADNESS = newSongButton("STEREO MADNESS", 27, {"geometry dash"})
STRANGERS = newSongButton("STRANGERS", 27, {"kenya grace"})
SUBWOOFER = newSongButton("SUBWOOFER LULLABY", 20, {"c418"})
SUGAR_PLUM = newSongButton("DANCE OF THE SUGAR PLUM FAIRY", 13, {"christmas", "hard"})
SUNFLOWER = newSongButton("SUNFLOWER", 27, {"spider man", "post malone"})
SUPER_MARIOS = newSongButton("SUPER MARIO BROS", 23, {""})
SUZUME = newSongButton("SUZUME NO TOJIMARI", 22, {"suzume", "radwimps"})
SWEATER_WEATHER = newSongButton("SWEATER WEATHER", 23, {"the neighbourhood", "love", "popular"})
SWIMMING = newSongButton("SWIMMING", 27, {"flawed mangoes", "dramamime"})
SWEDEN = newSongButton("SWEDEN", 27, {"c418"})
THE_BEN = newSongButton("THE BENONI", 27, {""})
THE_ECSTASY_OF_GOLD = newSongButton("THE ECSTASY OF GOLD", 22, {"the good, the bad and the ugly", "the good the bad and the ugly"})
THE_ENTERTAINER = newSongButton("THE ENTERTAINER", 25, {})
THE_GREAT_FAIRY = newSongButton("THE GREAT FAIRY FOUNTAIN", 17, {"zelda", "the legend of zelda"})
THE_NIGHTS = newSongButton("THE NIGHTS", 27, {"avicii"})
THE_WORLD = newSongButton("THE WORLD", 27, {"death note"})
THICK_OF_IT = newSongButton("THICK OF IT", 27, {"nigga", "ksi", "shit", "popular"})
THIS_IS_WHAT_HEARTBREAK = newSongButton("THIS IS WHAT HEARTBREAK FEELS LIKE", 11, {"jvke", "golden hour"})
THIS_IS_WHAT_WINTER = newSongButton("THIS IS WHAT WINTER FEELS LIKE", 11.5, {"jvke", "golden hour"})
TICKING = newSongButton("TICKING", 27, {""})
TOXIC = newSongButton("TOXIC (BOYWITHUKE)", 22, {""})
TRAP_R = newSongButton("TRAP ROYALTY", 27, {"fetty wap"})
TURKISH = newSongButton("TURKISH MARCH", 27, {"mozart", "rondo alla turca"})
UNDERSTAND = newSongButton("UNDERSTAND", 27, {"boywithuke"})
UNDERTALE = newSongButton("UNDERTALE", 27, {})
UNDERWATER = newSongButton("UNDERWATER PROM QUEENS", 14, {"omori"})
UNITY = newSongButton("UNITY", 27, {"thefatrat", "ncs", "no copyright sounds"}) 
UNRAVEL = newSongButton("UNRAVEL", 27, {"tokyo ghoul"})
UNRAVEL_EPIC = newSongButton("UNRAVEL (INSANE COVER)", 18, {"tokyo ghoul"})
VAMPIRE = newSongButton("VAMPIRE", 27, {"love", "olivia rodrigo"})
VIVA_LA_VIDA = newSongButton("VIVA LA VIDA", 27, {"coldplay"})
WAITING_FOR = newSongButton("WAITING FOR LOVE", 26, {"avicii"})
WAKE_ME = newSongButton("WAKE ME UP", 27, {"avicii"})
WASHING = newSongButton("WASHING MACHINE HEART", 18, {""})
WE_DONT = newSongButton("WE DONT TALK ABOUT BRUNO", 15, {"encanto"})
WET_HANDS = newSongButton("WET HANDS", 27, {"c418"})
WHERE_WE = newSongButton("WHERE WE PLAYED", 25, {"omori"})
WINTER_WIND = newSongButton("WINTER WIND (ETUDE OP.25 NO.11)", 13, {"chopin", "hard"})
WORLDS_END = newSongButton("WORLDS END VALENTINE", 18, {"omori"})
XO_TOUR = newSongButton("XO TOUR LLIF3", 27, {"lil uzi vert"})
YOUNG_GIRL_A = newSongButton("YOUNG GIRL A", 27, {"siinamota", "vocaloid"})
YOUR_REALITY = newSongButton("YOUR REALITY", 27, {"ddlc", "doki"})
MANGOMANGOMANGO = newSongButton("MANGO MANGO MANGO", 27, {""})
DEATH_WALTZ = newSongButton("DEATH WALTZ (WARNING)", 19, {""})

local framebuttons = {}

for _, button in ipairs(frame:GetChildren()) do
    if button:IsA("TextButton") then
        table.insert(framebuttons, button)
    end
end

table.sort(
    framebuttons,
    function(a, b)
        return a.Name:lower() < b.Name:lower()
    end
)

for index, button in ipairs(framebuttons) do
    button.LayoutOrder = index
end

local songs = {
    {button = INTERSTELLAR, bpm = "104", var = false, url = "INTERSTELLAR", cat = {"epic", "beautiful"}},
    {button = RUSHE, bpm = "80", var = false, url = "RUSH_E", cat = {"memes", "popular"}},
    {button = GOLDENHOUR, bpm = "94", var = false, url = "GOLDEN_HOUR", cat = {"beautiful", "best"}},
    {button = CUPID, bpm = "120", var = false, url = "CUPID", cat = {"pop/hiphop"}},
    {button = RATDANCE, bpm = "120", var = false, url = "RAT_DANCE", cat = {"memes"}},
    {button = RUNAWAY, bpm = "85", var = false, url = "RUNAWAY", cat = {"pop/hiphop"}},
    {button = YOUR_REALITY, bpm = "105", var = false, url = "YOUR_REALITY", cat = {"video games"}},
    {button = ANOTHER_LOVE, bpm = "123", var = false, url = "ANOTHER_LOVE", cat = {"sad", "best", "popular", "epic", "beautiful", "pop/hiphop"}},
    {button = FINAL_DUET, bpm = "84", var = false, url = "FINAL_DUET", cat = {"video games", "omori"}},
    {button = EXPERIENCE, bpm = "92", var = false, url = "EXPERIENCE", cat = {"epic", "best", "beautiful"}},
    {button = CAN_YOU_HEAR, bpm = "80", var = false, url = "CAN_YOU_HEAR_THE_FUCKING_MUSIC", cat = {"epic"}},
    {button = HOWLS_MOVING_CASTLE, bpm = "156", var = false, url = "HOWLS_MOVING_CASTLE", cat = {"anime/jpop", "best"}},
    {button = YOUNG_GIRL_A, bpm = "130", var = false, url = "YOUNG_GIRL_A", cat = {"anime/jpop", "sad"}},
    {button = ARIA_MATH, bpm = "84", var = false, url = "ARIA_MATH", cat = {"video games", "minecraft"}},
    {button = ALL_MY_FELLAS, bpm = "160", var = false, url = "ALL_MY_FELLAS", cat = {"memes"}},
    {button = THICK_OF_IT, bpm = "146", var = false, url = "THICK_OF_IT", cat = {"memes"}},
    {button = ROMANTIC_HOMICIDE, bpm = "132", var = false, url = "ROMANTIC_HOMICIDE", cat = {"sad"}},
    {button = IF_I_AM_WITH_YOU, bpm = "82", var = false, url = "IF_I_AM_WITH_YOU", cat = {"anime/jpop", "best", "beautiful"}},
    {button = CRADLES, bpm = "79", var = false, url = "CRADLES", cat = {"electronic"}},
    {button = IDOL, bpm = "166", var = false, url = "IDOL", cat = {"anime/jpop"}},
    {button = RIVER_FLOWS, bpm = "137", var = false, url = "RIVER_FLOWS_IN_YOU", cat = {"sad"}},
    {button = NOCTURNE, bpm = "62", var = false, url = "NOCTURNE", cat = {"classical", "best"}},
    {button = ISABELLA, bpm = "112", var = false, url = "ISABELLAS_LULLABY", cat = {"video games"}},
    {button = GIORNO, bpm = "135", var = false, url = "GIORNO", cat = {"anime/jpop", "memes"}},
    {button = GIVE_UP, bpm = "113", var = false, url = "GIVE_UP", cat = {"memes", "pop/hiphop"}},
    {button = UNRAVEL, bpm = "135", var = false, url = "UNRAVEL", cat = {"anime/jpop", "beautiful"}},
    {button = WINTER_WIND, bpm = "125", var = false, url = "WINTER_WIND", cat = {"classical"}},
    {button = SWEATER_WEATHER, bpm = "124", var = false, url = "SWEATER_WEATHER", cat = {"sad"}},
    {button = VIVA_LA_VIDA, bpm = "138", var = false, url = "VIVA_LA_VIDA", cat = {"epic", "beautiful", "best"}},
    {button = M3, bpm = "163", var = false, url = "WHAT_THE_FUCKK", cat = {"classical", "best"}},
    {button = NEVER_MEANT, bpm = "66", var = false, url = "NEVER_MEANT", cat = {"anime/jpop"}},
    {button = AVENGERS, bpm = "120", var = false, url = "AVENGERS", cat = {"epic", "best"}},
    {button = BEETHOVEN_VIRUS, bpm = "162", var = false, url = "BEETHOVEN_VIRUS", cat = {"classical", "electronic", "best"}},
    {button = LA_CAMPANELLA, bpm = "107", var = false, url = "LA_CAMPANELLA", cat = {"classical", "best"}},
    {button = KEROSENE, bpm = "116", var = false, url = "KEROSENE", cat = {"electronic"}},
    {button = RACING_INTO, bpm = "129", var = false, url = "RACING_INTO", cat = {"anime/jpop"}},
    {button = SURVIVE, bpm = "117", var = false, url = "SURVIVE", cat = {""}},
    {button = MEGALOVANIA, bpm = "120", var = false, url = "MEGALOVANIA", cat = {"video games", "undertale", "memes"}},
    {button = COCONUT, bpm = "132", var = false, url = "COCONUT", cat = {"video games"}},
    {button = FADED, bpm = "90", var = false, url = "FADED", cat = {"electronic"}},
    {button = SOLAS, bpm = "120", var = false, url = "SOLAS", cat = {"beautiful"}},
    {button = MARRIED, bpm = "83", var = false, url = "MARRIED", cat = {"sad"}},
    {button = BAD_PIGGIES, bpm = "156", var = false, url = "BAD_PIGGIES", cat = {"video games"}},
    {button = ASGORE, bpm = "115", var = false, url = "ASGORE", cat = {"video games", "undertale"}},
    {button = CARELESS, bpm = "153", var = false, url = "CARELESS", cat = {"memes"}},
    {button = I_WANT, bpm = "122", var = false, url = "I_WANT", cat = {"pop/hiphop", "rock"}},
    {button = IM_STILL, bpm = "177", var = false, url = "IM_STILL", cat = {"best"}},
    {button = HELLO, bpm = "105", var = false, url = "HELLO", cat = {"electronic"}},
    {button = BAD_APPLE, bpm = "138", var = false, url = "BAD_APPLE", cat = {"anime/jpop"}},
    {button = FR, bpm = "82", var = false, url = "FR", cat = {"all"}},
    {button = DIE_WITH, bpm = "152", var = false, url = "DIE_WITH", cat = {"pop/hiphop", "sad", "beautiful", "best"}},
    {button = FALLEN_DOWN, bpm = "110", var = false, url = "FALLEN_DOWN", cat = {"video games", "undertale"}},
    {button = ENIGMATIC, bpm = "50", var = false, url = "ENIGMATIC", cat = {"video games", "undertale", "best"}},
    {button = DEATH_WALTZ, bpm = "210", var = false, url = "DEATH_WALTZ", cat = {"all"}},
    {button = MIKU, bpm = "128", var = false, url = "MIKU", cat = {"anime/jpop"}},
    {button = A_THOUSAND, bpm = "100", var = false, url = "A_THOUSAND", cat = {"pop/hiphop"}},
    {button = SUGAR_PLUM, bpm = "70", var = false, url = "SUGAR_PLUM", cat = {"classical"}},
    {button = SPEED_OF, bpm = "162", var = false, url = "SPEED_OF", cat = {"video games", "electronic"}},
    {button = WET_HANDS, bpm = "74", var = false, url = "WET_HANDS", cat = {"video games", "minecraft"}},
    {button = SWEDEN, bpm = "44", var = false, url = "SWEDEN", cat = {"video games", "minecraft"}},
    {button = SUBWOOFER, bpm = "76", var = false, url = "SUBWOOFER", cat = {"video games", "minecraft"}},
    {button = MICE_ON, bpm = "56", var = false, url = "MICE_ON", cat = {"video games", "minecraft"}},
    {button = DRY_HANDS, bpm = "90", var = false, url = "DRY_HANDS", cat = {"video games", "minecraft"}},
    {button = HAGGSTORM, bpm = "102", var = false, url = "HAGGSTORM", cat = {"video games", "minecraft"}},
    {button = LIVING_MICE, bpm = "74", var = false, url = "LIVING_MICE", cat = {"video games", "minecraft"}},
    {button = KEY, bpm = "70", var = false, url = "KEY", cat = {"video games", "minecraft"}},
    {button = MOOG_CITY, bpm = "116", var = false, url = "MOOG_CITY", cat = {"video games", "minecraft"}},
    {button = MINECRAFT, bpm = "106", var = false, url = "MINECRAFT", cat = {"video games", "minecraft"}},
    {button = UNDERTALE, bpm = "100", var = false, url = "UNDERTALE", cat = {"video games", "undertale", "best", "epic"}},
    {button = HOPES_DREAMS, bpm = "170", var = false, url = "HOPES_DREAMS", cat = {"video games", "undertale", "best", "epic"}},
    {button = NYEH, bpm = "150", var = false, url = "NYEH", cat = {"video games", "undertale", "best"}},
    {button = SPIDER_DANCE, bpm = "115", var = false, url = "SPIDER_DANCE", cat = {"video games", "undertale"}},
    {button = HEARTACHE, bpm = "160", var = false, url = "HEARTACHE", cat = {"video games", "undertale"}},
    {button = BATTLE_AGAINST, bpm = "150", var = false, url = "BATTLE_AGAINST", cat = {"video games", "undertale"}},
    {button = HIS_THEME, bpm = "90", var = false, url = "HIS_THEME", cat = {"video games", "undertale"}},
    {button = SNOWY, bpm = "120", var = false, url = "SNOWY", cat = {"video games", "undertale"}},
    {button = SPEAR_OF, bpm = "130", var = false, url = "SPEAR_OF", cat = {"video games", "undertale", "best"}},
    {button = DOG_SONG, bpm = "230", var = false, url = "DOG_SONG", cat = {"video games", "undertale"}},
    {button = ONCE_UPON, bpm = "65", var = false, url = "ONCE_UPON", cat = {"video games", "undertale"}},
    {button = NOT_A_SLACKER, bpm = "145", var = false, url = "NOT_A_SLACKER", cat = {"video games", "undertale"}},
    {button = SHOP, bpm = "77", var = false, url = "SHOP", cat = {"video games", "undertale"}},
    {button = FINALE, bpm = "190", var = false, url = "FINALE", cat = {"video games", "undertale"}},
    {button = BY_YOUR_SIDE, bpm = "88", var = false, url = "BY_YOUR_SIDE", cat = {"video games", "omori"}},
    {button = WORLDS_END, bpm = "152", var = false, url = "WORLDS_END", cat = {"video games", "omori", "best"}},
    {button = LOST_LIBRARY, bpm = "62", var = false, url = "LOST_LIBRARY", cat = {"video games", "omori"}},
    {button = BREADY, bpm = "160", var = false, url = "BREADY", cat = {"video games", "omori", "best"}},
    {button = IT_MEANS, bpm = "96", var = false, url = "IT_MEANS", cat = {"video games", "omori"}},
    {button = UNDERWATER, bpm = "160", var = false, url = "UNDERWATER", cat = {"video games", "omori"}},
    {button = WHERE_WE, bpm = "96", var = false, url = "WHERE_WE", cat = {"video games", "omori"}},
    {button = MARI_BOSS, bpm = "169", var = false, url = "MARI_BOSS", cat = {"video games", "omori"}},
    {button = GOOD_MORNING, bpm = "90", var = false, url = "GOOD_MORNING", cat = {"video games", "omori"}},
    {button = FUR_ELISE, bpm = "72", var = false, url = "FUR_ELISE", cat = {"classical"}},
    {button = MOONLIGHT, bpm = "51", var = false, url = "MOONLIGHT", cat = {"classical"}},
    {button = FANTAISIE, bpm = "168", var = false, url = "FANTAISIE", cat = {"classical"}},
    {button = DROWNING_LOVE, bpm = "112", var = false, url = "DROWNING_LOVE", cat = {"beautiful", "sad", "best"}},
    {button = CANON_D, bpm = "100", var = false, url = "CANON_D", cat = {"classical"}},
    {button = FREEDOM_DIVE, bpm = "220", var = false, url = "FREEDOM_DIVE", cat = {"electronic"}},
    {button = STAY, bpm = "85", var = false, url = "STAY", cat = {"pop/hiphop"}},
    {button = TURKISH, bpm = "92", var = false, url = "TURKISH", cat = {"classical"}},
    {button = SUPER_MARIOS, bpm = "180", var = false, url = "SUPER_MARIOS", cat = {"video games", "memes"}},
    {button = MII, bpm = "114", var = false, url = "MII", cat = {"video games", "memes"}},
    {button = LACRIMOSA, bpm = "64", var = false, url = "LACRIMOSA", cat = {"classical", "memes"}},
    {button = DESPACITO, bpm = "89", var = false, url = "DESPACITO", cat = {"pop/hiphop", "memes"}},
    {button = WE_DONT, bpm = "103", var = false, url = "WE_DONT", cat = {}},
    {button = HUNGARIAN, bpm = "130", var = false, url = "HUNGARIAN", cat = {"classical"}},
    {button = SKYFALL, bpm = "70", var = false, url = "SKYFALL", cat = {"epic", "best"}},
    {button = THE_ENTERTAINER, bpm = "60", var = false, url = "THE_ENTERTAINER", cat = {"memes"}},
    {button = DONT_STOP, bpm = "118", var = false, url = "DONT_STOP", cat = {"rock"}},
    {button = DREAM_ON, bpm = "78", var = false, url = "DREAM_ON", cat = {"rock"}},
    {button = HIT_THE_ROAD, bpm = "60", var = false, url = "HIT_THE_ROAD", cat = {"rock"}},
    {button = TOXIC, bpm = "180", var = false, url = "TOXIC", cat = {"sad"}},
    {button = UNDERSTAND, bpm = "206", var = false, url = "UNDERSTAND", cat = {"sad"}},
    {button = SICK_OF_U, bpm = "185", var = false, url = "SICK_OF_U", cat = {"sad"}},
    {button = IDGAF, bpm = "196", var = false, url = "IDGAF", cat = {"sad"}},
    {button = EASY_ON_ME, bpm = "73", var = false, url = "EASY_ON_ME", cat = {"", "pop/hiphop"}},
    {button = METAMORPH, bpm = "180", var = false, url = "METAMORPH", cat = {"electronic"}},
    {button = SWIMMING, bpm = "165", var = false, url = "SWIMMING", cat = {"beautiful", "best"}},
    {button = DRAMAM, bpm = "224", var = false, url = "DRAMAM", cat = {"beautiful"}},
    {button = LOST_UMB, bpm = "133", var = false, url = "LOST_UMB", cat = {"electronic", "anime/jpop"}},
    {button = LOVELY_B, bpm = "150", var = false, url = "LOVELY_B", cat = {"memes", "best"}},
    {button = TRAP_R, bpm = "151", var = false, url = "TRAP_R", cat = {"memes", "epic", "best"}},
    {button = MANGOMANGOMANGO, bpm = "110", var = false, url = "MANGOMANGOMANGO", cat = {"epic"}},
    {button = DREAM_FL, bpm = "150", var = false, url = "DREAM_FL", cat = {"electronic"}},
    {button = LALALA, bpm = "130", var = false, url = "LALALA", cat = {"pop/hiphop"}},
    {button = THE_BEN, bpm = "180", var = false, url = "THE_BEN", cat = {"classical", "epic", "best"}},
    {button = POKEMON, bpm = "160", var = false, url = "POKEMON", cat = {"video games", "anime/jpop"}},
    {button = POKEMON_RED, bpm = "180", var = false, url = "POKEMON_RED", cat = {"video games", "anime/jpop"}},
    {button = FLASHING, bpm = "100", var = false, url = "FLASHING", cat = {"pop/hiphop", "epic"}},
    {button = ALL_GIRLS, bpm = "85", var = false, url = "ALL_GIRLS", cat = {"pop/hiphop", "sad", "best"}},
    {button = SAVE_YOUR, bpm = "120", var = false, url = "SAVE_YOUR", cat = {"pop/hiphop", "sad"}},
    {button = LIGHTS, bpm = "132", var = false, url = "LIGHTS", cat = {"anime/jpop"}},
    {button = THE_WORLD, bpm = "96", var = false, url = "THE_WORLD", cat = {"anime/jpop"}},
    {button = L, bpm = "71", var = false, url = "L", cat = {"anime/jpop", "memes"}},
    {button = BLOODY, bpm = "100", var = false, url = "BLOODY", cat = {"pop/hiphop"}},
    {button = SPACE_SONG, bpm = "75", var = false, url = "SPACE_SONG", cat = {"sad", "pop/hiphop"}},
    {button = HEATHENS, bpm = "90", var = false, url = "HEATHENS", cat = {"sad"}},
    {button = VAMPIRE, bpm = "135", var = false, url = "VAMPIRE", cat = {"pop/hiphop"}},
    {button = MARY_ON, bpm = "130", var = false, url = "MARY_ON", cat = {"rock"}},
    {button = RUNNING_UP, bpm = "108", var = false, url = "RUNNING_UP", cat = {"sad", "pop/hiphop"}},
    {button = DUMB_DUMB, bpm = "118", var = false, url = "DUMB_DUMB", cat = {"memes"}},
    {button = MA_MEILLEUR, bpm = "178", var = false, url = "MA_MEILLEUR", cat = {"memes"}},
    {button = SUZUME, bpm = "78", var = false, url = "SUZUME", cat = {"anime/jpop"}},
    {button = CHRISTMAS_KIDS, bpm = "152", var = false, url = "CHRISTMAS_KIDS", cat = {"sad"}},
    {button = DARK_BEACH, bpm = "130", var = false, url = "DARK_BEACH", cat = {"sad", "best"}},
    {button = FUKASHIGI, bpm = "90", var = false, url = "FUKASHIGI", cat = {"anime/jpop"}},
    {button = SPARKLE, bpm = "192", var = false, url = "SPARKLE", cat = {"anime/jpop", "best", "beautiful"}},
    {button = SHIKAIRO, bpm = "182", var = false, url = "SHIKAIRO", cat = {"anime/jpop", "memes"}},
    {button = WASHING, bpm = "114", var = false, url = "WASHING", cat = {"sad"}},
    {button = CAN_YOU_HEAR_EPIC, bpm = "102", var = false, url = "CAN_YOU_HEAR_EPIC", cat = {"epic", "best"}},
    {button = UNRAVEL_EPIC, bpm = "132", var = false, url = "UNRAVEL_EPIC", cat = {"epic", "best", "beautiful"}},
    {button = A_SKY_FULL, bpm = "120", var = false, url = "A_SKY_FULL", cat = {"epic", "pop/hiphop"}},
    {button = THE_NIGHTS, bpm = "128", var = false, url = "THE_NIGHTS", cat = {"pop/hiphop", "electronic", "epic"}},
    {button = BIRDS_OF_A, bpm = "105", var = false, url = "BIRDS_OF_A", cat = {"pop/hiphop"}},
    {button = CANT_LET, bpm = "160", var = false, url = "CANT_LET", cat = {"video games", "electronic"}},
    {button = DEADLOCKED, bpm = "140", var = false, url = "DEADLOCKED", cat = {"video games", "electronic"}},
    {button = DUVET, bpm = "91", var = false, url = "DUVET", cat = {"sad", "beautiful", "best"}},
    {button = FIVE_NIGHTS_1, bpm = "108", var = false, url = "FIVE_NIGHTS_1", cat = {"video games", "electronic", "epic"}},
    {button = ITS_BEEN_SO, bpm = "96", var = false, url = "ITS_BEEN_SO", cat = {"video games", "electronic"}},
    {button = STEREO_MADNESS, bpm = "160", var = false, url = "STEREO_MADNESS", cat = {"video games", "electronic"}},
    {button = SUNFLOWER, bpm = "90", var = false, url = "SUNFLOWER", cat = {"pop/hiphop", "beautiful"}},
    {button = WAITING_FOR, bpm = "129", var = false, url = "WAITING_FOR", cat = {"pop/hiphop", "electronic", "best", "epic"}},
    {button = WAKE_ME, bpm = "110", var = false, url = "WAKE_ME_UP", cat = {"pop/hiphop", "electronic"}},
    {button = GEOMETRY_DASH, bpm = "128", var = false, url = "GEOMETRY_DASH", cat = {"video games", "electronic"}},
    {button = ARUARIAN, bpm = "80", var = false, url = "ARUARIAN", cat = {"beautiful"}},
    {button = DAYLIGHT, bpm = "130", var = false, url = "DAYLIGHT", cat = {"beautiful", "epic", "best"}},
    {button = SHIAWASE, bpm = "150", var = false, url = "SHIAWASE", cat = {"electronic", "epic", "beautiful", "best"}},
    {button = EVERGREEN, bpm = "120", var = false, url = "EVERGREEN", cat = {"beautiful", "best"}},
    {button = FREAKS, bpm = "175", var = false, url = "FREAKS", cat = {"sad", "rock", "beautiful"}},
    {button = HERE_WITH, bpm = "132", var = false, url = "HERE_WITH", cat = {"sad"}},
    {button = RESONANCE, bpm = "70", var = false, url = "RESONANCE", cat = {"beautiful"}},
    {button = INSANE, bpm = "105", var = false, url = "INSANE", cat = {"electronic"}},
    {button = LEVELS, bpm = "122", var = false, url = "LEVELS", cat = {"electronic", "levels", "best"}},
    {button = MOOD, bpm = "91", var = false, url = "MOOD", cat = {"pop/hiphop", "best"}},
    {button = SOMETHING_JUST, bpm = "103", var = false, url = "SOMETHING_JUST", cat = {"pop/hiphop", "sad", "best"}},
    {button = STRANGERS, bpm = "170", var = false, url = "STRANGERS", cat = {"pop/hiphop", "sad", "best"}},
    {button = TICKING, bpm = "77", var = false, url = "TICKING", cat = {"epic"}},
    {button = AFTER_DARK, bpm = "140", var = false, url = "AFTER_DARK", cat = {"sad", "beautiful"}},
    {button = ANYONE_CAN, bpm = "100", var = false, url = "ANYONE_CAN", cat = {"sad"}},
    {button = BLUE, bpm = "130", var = false, url = "BLUE", cat = {"pop/hiphop"}},
    {button = CLOUD_9, bpm = "128", var = false, url = "CLOUD_9", cat = {"electronic"}},
    {button = DAMNED, bpm = "95", var = false, url = "DAMNED", cat = {"video games"}},
    {button = ASTRONAMIA, bpm = "120", var = false, url = "ASTRONAMIA", cat = {"memes", "electronic"}},
    {button = COUNTING_STARS, bpm = "105", var = false, url = "COUNTING_STARS", cat = {"pop/hiphop"}},
    {button = SHAPE_OF, bpm = "190", var = false, url = "SHAPE_OF", cat = {"pop/hiphop"}},
    {button = ENEMY, bpm = "77", var = false, url = "ENEMY", cat = {"pop/hiphop"}},
    {button = FLARE, bpm = "150", var = false, url = "FLARE", cat = {"electronic"}},
    {button = THIS_IS_WHAT_WINTER, bpm = "115", var = false, url = "THIS_IS_WHAT_WINTER", cat = {"beautiful", "pop/hiphop", "best"}},
    {button = HEAT_WAVE, bpm = "81", var = false, url = "HEAT_WAVE", cat = {"pop/hiphop"}},
    {button = HIGH_HOPES, bpm = "164", var = false, url = "HIGH_HOPES", cat = {"pop/hiphop"}},
    {button = HOUSE_OF, bpm = "112", var = false, url = "HOUSE_OF", cat = {"pop/hiphop"}},
    {button = IN_THE_NAME, bpm = "134", var = false, url = "IN_THE_NAME", cat = {"pop/hiphop", "electronic", "best", "epic", "beautiful"}},
    {button = PAST_LIVES, bpm = "110", var = false, url = "PAST_LIVES", cat = {"sad", "beautiful"}},
    {button = SLAY, bpm = "120", var = false, url = "SLAY", cat = {"electronic"}},
    {button = SNOWFALL, bpm = "96", var = false, url = "SNOWFALL", cat = {"beautiful", "sad"}},
    {button = RISE_UP, bpm = "82", var = false, url = "RISE_UP", cat = {"electronic", "epic"}},
    {button = UNITY, bpm = "110", var = false, url = "UNITY", cat = {"electronic", "best"}},
    {button = MONODY, bpm = "107", var = false, url = "MONODY", cat = {"electronic", "epic", "best"}},
    {button = THIS_IS_WHAT_HEARTBREAK, bpm = "50", var = false, url = "THIS_IS_WHAT_HEARTBREAK", cat = {"sad", "pop/hiphop"}},
    {button = CANDYLAND, bpm = "130", var = false, url = "CANDYLAND", cat = {"electronic", "best", "best"}},
    {button = AS_IT_WAS, bpm = "174", var = false, url = "AS_IT_WAS", cat = {"pop/hiphop", "best"}},
    {button = CENTIMETER, bpm = "140", var = false, url = "CENTIMETER", cat = {"anime/jpop"}},
    {button = DETROIT, bpm = "60", var = false, url = "DETROIT", cat = {"video games", "beautiful"}},
    {button = THE_GREAT_FAIRY, bpm = "80", var = false, url = "THE_GREAT_FAIRY", cat = {"video games"}},
    {button = IMMORTAL, bpm = "60", var = false, url = "IMMORTAL", cat = {"pop/hiphop"}},
    {button = XO_TOUR, bpm = "142", var = false, url = "XO_TOUR", cat = {"pop/hiphop"}},
    {button = THE_ECSTASY_OF_GOLD, bpm = "85", var = false, url = "THE_ECSTASY_OF_GOLD", cat = {"epic", "beautiful"}},


    --[[

    {button = , bpm = "", var = false, url = "", cat = {""}}

]]
}

for _, song in ipairs(songs) do
    print("song loaded: " .. song.button.Name)
end

local categories = {
    "best",
    "epic",
    "beautiful",
    "video games",
    "memes",
    "classical",
    "pop/hiphop",
    "sad",
    "rock",
    "anime/jpop",
    "electronic",
    "undertale",
    "omori",
    "minecraft"
} -- The main table for unique categories

local folderexists = false
local customsongs = {}

print("initiating buttons")

print("fetching songs")

local specsong = {button = AVRIL_14, bpm = "79", var = false, url = "https://pastefy.app/NY5KqR8m/raw", cat = {}}
if game.Players.LocalPlayer.Name == "4BCQA" then
    table.insert(songs, specsong)
end

local customnotice = Instance.new("TextLabel")
customnotice.Name = "customnotice"
customnotice.Parent = scroll
customnotice.BackgroundColor3 = Color3.fromRGB(76, 82, 101)
customnotice.BorderColor3 = Color3.fromRGB(64, 68, 90)
customnotice.BorderSizePixel = 4
customnotice.Size = UDim2.new(0, 175, 0, 75)
customnotice.Font = Enum.Font.SourceSansBold
customnotice.Text = "Your executor may not support this feature."
customnotice.TextColor3 = Color3.fromRGB(255, 255, 255)
customnotice.TextSize = 25.000
customnotice.TextWrapped = true

local function newcat(name)
    local TextButton = Instance.new("TextButton")
    TextButton.Parent = categoriesFrame
    TextButton.BackgroundColor3 = Color3.fromRGB(76, 82, 101)
    TextButton.BorderColor3 = Color3.fromRGB(64, 68, 90)
    TextButton.BorderSizePixel = 2
    TextButton.Size = UDim2.new(0, 100, 0, 25)
    TextButton.Font = Enum.Font.SourceSansBold
    TextButton.Text = name
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextSize = 14.000

    return TextButton
end

local customcat = newcat("custom songs (0)")

customcat.MouseButton1Click:Connect(
    function()
        scroll.CanvasPosition = Vector2.new(0, 0)
        for _, song in ipairs(songs) do
            song.button.Visible = false
        end

        for _, song in ipairs(customsongs) do
            song.Visible = true
        end

        PLAYRANDOM.Visible = false
        LOOPRANDOM.Visible = false
        customnotice.Visible = true
    end
)

function updatecustomcount()
    customcat.Text = "custom songs (" .. tostring(#customsongs - 1) .. ")"
end

local othercats = newcat("other")

othercats.MouseButton1Click:Connect(
    function()
        scroll.CanvasPosition = Vector2.new(0, 0)
        for _, song in ipairs(songs) do
            song.button.Visible = false
        end
        for _, song in ipairs(customsongs) do
            song.Visible = false
        end

        PLAYRANDOM.Visible = true
        LOOPRANDOM.Visible = true
        customnotice.Visible = false
    end
)

local allcats = newcat("all (" .. tostring(#songs) .. ")")

allcats.MouseButton1Click:Connect(
    function()
        scroll.CanvasPosition = Vector2.new(0, 0)
        for _, song in ipairs(songs) do
            song.button.Visible = true
        end

        for _, song in ipairs(customsongs) do
            song.Visible = false
        end

        PLAYRANDOM.Visible = true
        LOOPRANDOM.Visible = true
        customnotice.Visible = false
    end
)

local existing = {}

for _, categoryName in pairs(categories) do
    local numsongs = {}
    for _, song in ipairs(songs) do
        for _, category in ipairs(song.cat) do
            if category == categoryName then
                table.insert(numsongs, song.button.Name)
            end
        end
    end

    local categoryButton = newcat(categoryName .. " (" .. tostring(#numsongs) .. ")")

    categoryButton.MouseButton1Click:Connect(
        function()
            PLAYRANDOM.Visible = false
            LOOPRANDOM.Visible = false

            scroll.CanvasPosition = Vector2.new(0, 0)

            for _, song in ipairs(songs) do
                song.button.Visible = false
                for _, category in ipairs(song.cat) do
                    if category == categoryName then
                        song.button.Visible = true
                    end
                end
            end

            for _, song in ipairs(customsongs) do
                song.Visible = false
            end
            customnotice.Visible = false
        end
    )
end

function disable()
    for _, song in ipairs(songs) do
        song.var = false
    end
end

disable()

songisplaying = false

function playbuttonclicked()
    if songisplaying then
        playSound("6493287948", 0.1)
        NotificationLibrary:SendNotification("Error", "A song is already playing.", 1)
        return
    end

    songisplaying = true

    bpm = tonumber(bpmbox.Text)

    loadstring(
        game:HttpGet("https://raw.githubusercontent.com/hellohellohell012321/TALENTLESS/main/loader_main.lua", true)
    )()

    -- find which song to play

    local songFound = false
    for _, song in pairs(songs) do
        if songFound == false then
            if song.var == true then
                loadstring(
                    game:HttpGet(
                        "https://raw.githubusercontent.com/hellohellohell012321/TALENTLESS/main/" .. song.url,
                        true
                    )
                )()
            songFound = true
            end
        end
    end
end -- close the play song onclick function

playsong.MouseButton1Click:Connect(playbuttonclicked)

for _, song in ipairs(songs) do
    song.button.MouseButton1Click:Connect(
        function()
            disable()
            song.var = true
            songname.Text = song.button.Text
            bpmbox.Text = song.bpm
        end
    )
end

-- play random function

PLAYRANDOM.MouseButton1Click:Connect(
    function()
        local function getRandomSong()
            local ransong = math.random(1, #songs)
            return songs[ransong]
        end

        local randomSong = getRandomSong()

        disable()
        randomSong.var = true
        songname.Text = randomSong.button.Name
        bpmbox.Text = randomSong.bpm

        playbuttonclicked()
    end
)

-- play all function

playingall = false

local function createstopbutton()
    if not STOPLOOP then
        -- StarterGui.ScreenGui.Frame.scrolltab.stoploop
        STOPLOOP = Instance.new("TextButton", bar)
        STOPLOOP["BorderSizePixel"] = 3
        STOPLOOP["TextSize"] = 14
        STOPLOOP["TextColor3"] = Color3.fromRGB(255, 255, 255)
        STOPLOOP["BackgroundColor3"] = Color3.fromRGB(109, 109, 109)
        STOPLOOP["FontFace"] =
            Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        STOPLOOP["AutomaticSize"] = Enum.AutomaticSize.XY
        STOPLOOP["Size"] = UDim2.new(0, 131, 0, 29)
        STOPLOOP["Name"] = [[stoploop]]
        STOPLOOP["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        STOPLOOP["Text"] = [[STOP LOOPING SONGS]]
        STOPLOOP["Position"] = UDim2.new(0.07476, 0, 0.80575, 0)
        STOPLOOP.LayoutOrder = 4

        STOPLOOP.MouseButton1Click:Connect(
            function()
                playingall = false
                STOPLOOP:Destroy()
                stopPlayingSongs()
                STOPLOOP = nil
            end
        )
    end
end

LOOPRANDOM.MouseButton1Click:Connect(
    function()
        if playingall then
            return
        end
        playingall = true
        createstopbutton()

        while true do
            local function getRandomSong()
                local ransong = math.random(1, #songs)
                return songs[ransong]
            end

            local randomSong = getRandomSong()
            if not playingall then
                return
            end

            disable()
            randomSong.var = true
            songname.Text = randomSong.button.Name
            bpmbox.Text = randomSong.bpm
            playbuttonclicked()
            wait(1)
        end
    end
)

-- close function

closeButton.MouseButton1Click:Connect(
    function()
        ScreenGui:Destroy()
        STOPLOOP = nil
        playingall = false
        stopAllSongs()
    end
)

infoButton.MouseButton1Click:Connect(
    function()
        loadstring(
            game:HttpGet("https://raw.githubusercontent.com/hellohellohell012321/TALENTLESS/main/info.lua", true)
        )()
    end
)

-- function to make the song buttons

local function newCustomSongButton(name)
    local customsongframe = Instance.new("Frame")
    local test = Instance.new("TextButton")
    local ImageButton = Instance.new("ImageButton")

    customsongframe.Name = "customsongframe"
    customsongframe.Parent = scroll
    customsongframe.BackgroundColor3 = Color3.fromRGB(76, 82, 101)
    customsongframe.BorderColor3 = Color3.fromRGB(64, 68, 90)
    customsongframe.BorderSizePixel = 4
    customsongframe.Size = UDim2.new(0, 175, 0, 35)
    customsongframe.SizeConstraint = Enum.SizeConstraint.RelativeYY

    test.Name = name
    test.Parent = customsongframe
    test.BackgroundTransparency = 1.000
    test.Size = UDim2.new(0, 135, 0, 35)
    test.Font = Enum.Font.SourceSansBold
    test.Text = name
    test.TextColor3 = Color3.fromRGB(255, 255, 255)
    test.TextScaled = true
    test.TextWrapped = true

    ImageButton.Parent = customsongframe
    ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton.BackgroundTransparency = 1.000
    ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton.BorderSizePixel = 0
    ImageButton.Position = UDim2.new(0.816999972, 0, 0.115000002, 0)
    ImageButton.Size = UDim2.new(0, 26, 0, 27)
    ImageButton.Image = "http://www.roblox.com/asset/?id=6121397347"

    return {button = test, delbutton = ImageButton, frame = customsongframe}
end

-- testing if the executor supports
-- listfiles(""), listfiles([[./TALENTLESS_CUSTOM_SONGS]])

local function test(name, _, func)
    print("Running test: " .. name)
    local success, err = pcall(func)
    if success then
        print(name .. " passed")
        return true
    else
        print(name .. " failed: " .. err)
        return false
    end
end

local function runTests()
    local allPassed = true

    allPassed =
        test(
        "makefolder",
        {},
        function()
            makefolder("TALENTLESS_makefolder")
            assert(isfolder("TALENTLESS_makefolder"), "Did not create the folder")
        end
    ) and allPassed

    allPassed =
        test(
        "listfiles",
        {},
        function()
            assert(#listfiles("") > 0, "Did not return a list of files")
        end
    ) and allPassed

    allPassed =
        test(
        "writefile",
        {},
        function()
            writefile("TALENTLESS_makefolder/writefile.txt", "success")
            testfile = listfiles("./TALENTLESS_makefolder")[1]
            assert(readfile(testfile) == "success", "Did not write the file")
        end
    ) and allPassed

    allPassed =
        test(
        "listfiles2",
        {},
        function()
            assert(#listfiles("./TALENTLESS_makefolder") > 0, "Did not return a list of files")
        end
    ) and allPassed

    allPassed =
        test(
        "delfile",
        {},
        function()
            delfile(testfile)
            assert(not isfile(testfile), "Did not delete the file")
        end
    ) and allPassed

    return allPassed
end

local result = runTests()

if result == true then
    print("this executor supports custom songs")
    customnotice:Destroy()
end

NEWSONGBUTTON = newSongButton("+", 30, {""})
NEWSONGBUTTON.Visible = false
print("loaded NEWSONGBUTTON")

NEWSONGBUTTON.MouseButton1Click:Connect(
    function()
        loadstring(
            game:HttpGet("https://raw.githubusercontent.com/hellohellohell012321/TALENTLESS/main/add_song.lua", true)
        )()
    end
)

table.insert(customsongs, NEWSONGBUTTON)
local addedCustoms = {}

-- function for listing songs in your custom songs folder. this runs at the end so if ur exec doesnt support it, the script wont die.

function updateSongs()
    local alreadyAdded

    for _, file in ipairs(listfiles("")) do
        print(tostring(file))
        if folderexists == false then
            if string.find(tostring(file), "TALENTLESS_CUSTOM_SONGS") then
                folderexists = true
                print("custom songs folder found")
            end
        end
    end

    print("searching for custom song files...")

    if folderexists then
        for _, custom in ipairs(listfiles([[./TALENTLESS_CUSTOM_SONGS]])) do
            alreadyAdded = false

            print("song file found: " .. tostring(custom))

            local filepath = tostring(custom) -- converts it into the format /TALENTLESS_CUSTOM_SONGS\example.txt

            if not table.find(addedCustoms, filepath) then
                if filepath:match("%.txt$") then -- if it has .txt at the end
                    print("its a txt file, continuing")

                    table.insert(addedCustoms, filepath) -- add the file to the addedCustoms table
                    local tsongname = filepath:gsub([[\]], "/"):match(".*/([^/]+)%.txt$") or "Error" -- remove the /, \, and .txt
                    print("song name: " .. tsongname)

                    local hello = newCustomSongButton(tsongname) -- make the song button
                    local songbutton = hello.button -- get the button
                    local delsongbutton = hello.delbutton
                    local songframe = hello.frame -- get the frame
                    table.insert(customsongs, songframe)
                    songbutton.Visible = false

                    print("created song button for " .. tsongname)

                    local songbpm = readfile(custom):match("bpm%s*=%s*(%d+)") or "Error" -- read the file and look for the string after bpm =
                    print("songbpm found: " .. songbpm)

                    songbutton.Visible = true

                    songbutton.MouseButton1Click:Connect(
                        function()
                            print("clicked!")

                            if songisplaying then
                                playSound("6493287948", 0.1)
                                NotificationLibrary:SendNotification("Error", "A song is already playing.", 1)
                                return
                            else
                                local songcode = readfile(custom) -- define the contents of the song file
                                local func, err = loadstring(songcode) -- load it

                                if func then
                                    print("running scrip....")
                                    songname.Text = tsongname
                                    bpmbox.Text = songbpm
                                    playSound("6493287948", 0.1)
                                    NotificationLibrary:SendNotification("Success", "Began playing song.", 1)
                                    songisplaying = true
                                    func()
                                else
                                    print("invalid script")
                                    playSound("6493287948", 0.1)
                                    NotificationLibrary:SendNotification(
                                        "Error",
                                        "Your song script is broken. If confused, contact support in the discord.",
                                        5
                                    )
                                end
                            end
                        end
                    )

                    -- Initialize variables outside the event handler
                    local clickTime = 0.5
                    local lastClick = 0

                    -- Create a single event connection
                    delsongbutton.MouseButton1Click:Connect(
                        function()
                            local now = tick()
                            if now - lastClick <= clickTime then
                                -- Double-click detected
                                print("Double-click detected. Deleting song...")
                                delfile(filepath) -- Delete the file
                                songframe:Destroy()
                                table.remove(customsongs, table.find(customsongs, songbutton))
                                table.remove(addedCustoms, table.find(addedCustoms, filepath))
                                updatecustomcount()
                                playSound("6493287948", 0.1)
                                NotificationLibrary:SendNotification("Success", "Your song has been deleted.", 5)
                            else
                                -- Single-click detected
                                print("Single-click detected. Showing notification...")
                                playSound("6493287948", 0.1)
                                NotificationLibrary:SendNotification("Info", "Double-click to delete the song.", 3)
                            end
                            lastClick = now -- Update the last click time
                        end
                    )

                    updatecustomcount()
                else -- if yes table.find
                    print("song already added, skipping")
                end
            else
                print("its not a txt, skipping")
            end
        end
    else
    end -- ends if folderexists
end -- end updatesongs func

for _, songbutton in ipairs(scroll:GetChildren()) do
    if songbutton:IsA("TextButton") then
        if songbutton.Text == "error" then
            songbutton:Destroy()
        end
    else
    end
end

wait(0.5)

updateSongs()
